{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","INITIAL_STATE","name","number","ContactForm","onSubmit","useState","contact","setContact","handleChange","target","value","reset","e","preventDefault","className","s","form","form__label","type","form__input","pattern","title","required","onChange","form__button","ContactList","contacts","onDeleteContact","map","id","contacts__item","contacts__button","onClick","Filter","onFilterChange","filter","filter__input","DEFAULT_CONTACTS","App","key","defaultValue","JSON","parse","localStorage","getItem","state","setState","useEffect","window","setItem","stringify","UseLocalStorage","setContacts","setFilter","uuidv4","find","el","alert","normalizedFilter","toLowerCase","includes","getFilteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.88bf691d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__U7AfG\",\"form__input\":\"ContactForm_form__input__YkKgD\",\"form__label\":\"ContactForm_form__label__3v5lz\",\"form__button\":\"ContactForm_form__button__RZmkD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__2_G3W\",\"contacts__item\":\"ContactList_contacts__item__3mwTg\",\"contacts__button\":\"ContactList_contacts__button__3q3BS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__3CG4k\",\"filter__input\":\"Filter_filter__input__QawGu\"};","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\n\nconst INITIAL_STATE = {\n  name: '',\n  number: '',\n};\n\nfunction ContactForm({onSubmit}) {\n  const [contact, setContact] = useState(INITIAL_STATE);\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setContact({\n      ...contact,\n      [name]: value\n    })\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(contact);\n    reset();\n  };\n\n  const reset = () => {\n    setContact(INITIAL_STATE);\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <label className={s.form__label}>\n        Name\n        <input\n          type=\"text\"\n          className={s.form__input}\n          name=\"name\"\n          value={contact.name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <label className={s.form__label}>\n        Number\n        <input\n          type=\"tel\"\n          className={s.form__input}\n          name=\"number\"\n          value={contact.number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <button type=\"submit\" className={s.form__button}>Add contact</button>\n    </form>\n  );\n}\n\n\nContactForm.propTypes = {\n  target: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nfunction ContactList({ contacts, onDeleteContact }) { \n  return (\n    <ul className={s.contacts}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={s.contacts__item}>\n          {name}: {number}\n          <button type=\"button\" className={s.contacts__button} onClick={() => onDeleteContact(id)}>Delete</button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nfunction Filter({ value, onFilterChange }) {\n  return (\n    <>\n      <p className={s.filter}>Find contacts by name</p>\n      <input\n        type=\"text\"\n        className={s.filter__input}\n        value={value}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        onChange={onFilterChange}\n      />\n    </>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onFilterChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import './App.css';\nimport { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\n\nconst DEFAULT_CONTACTS = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' }\n];\n\nconst UseLocalStorage = (key, defaultValue) => {\n  const [state, setState] = useState(() => {\n    return JSON.parse(localStorage.getItem(key)) ?? defaultValue;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  return [state, setState];\n};\n\nfunction App() {  \n  const [contacts, setContacts] = UseLocalStorage('contacts', DEFAULT_CONTACTS);\n  const [filter, setFilter] = useState('');\n\n  const handleFormSubmit = ({ name, number }) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    if (contacts.find(el => el.name === contact.name)) {\n      return alert(`${name} is already in contacts`);\n    }\n\n    setContacts([contact, ...contacts]);\n  };\n\n  const handleFilterChange = e => {\n    const { value } = e.target;\n    setFilter(value);\n  };\n\n  const getFilteredContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n  }\n\n  const deleteContact = id => {\n     setContacts(contacts.filter(contact => contact.id !== id));\n  };\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={handleFormSubmit} />\n\n      <h2>Contacts</h2>\n      <Filter value={filter} onFilterChange={handleFilterChange} />\n      <ContactList contacts={getFilteredContacts()} onDeleteContact={deleteContact} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}